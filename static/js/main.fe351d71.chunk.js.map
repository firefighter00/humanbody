{"version":3,"sources":["logo.svg","components/Orbit.jsx","components/Background.jsx","components/Floor.jsx","state.js","components/Dragable.jsx","components/Model.jsx","db.js","components/CameraButtons.jsx","components/Bulb.jsx","components/Lights.jsx","components/Effects.jsx","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","attach","args","domElement","Background","props","texture","useLoader","THREE","process","formatted","useMemo","image","height","fromEquirectangularTexture","object","Floor","useBox","ref","receiveShadow","transparent","opacity","DragControls","Model","mixer","model","GLTFLoader","path","animations","length","scene","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","castShadow","material","side","scale","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","divStyle","zIndex","position","width","background","boxShadow","CameraButtons","useState","falling","setFalling","accX","setAccX","accY","setAccY","accZ","setAccZ","heartrate","setHeartRate","mqsensor","setMQSensor","rotateX","setRotateX","rotateY","setRotateY","rotateZ","setRotateZ","handC","setHandC","handF","setHandF","headC","setHeadC","headF","setHeadF","useEffect","accsensorRef","accXRef","accYRef","accZRef","heartrateRef","mqsensorRef","rotateXRef","rotateYRef","rotateZRef","handTempCRef","handTempFRef","headTempCRef","headTempFRef","onValue","snapshot","val","style","left","top","textAlign","paddingTop","right","color","Bulb","useRef","lights","push","emissive","Lights","intensity","intensitym","Effects","setLights","focusDistance","focalLength","bokehScale","App","powerPreference","antialias","stencil","depth","shadowMap","fallback","Array","fill","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe351d71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { useThree, extend } from 'react-three-fiber'\n\nextend({OrbitControls})\n\nconst Orbit = () => {\n    const { camera, gl } = useThree()\n    return <orbitControls \n                attach = 'orbitControls'\n                args={[camera, gl.domElement]} />\n  }\n\nexport default Orbit\n","import { useLoader, useThree } from \"react-three-fiber\";\nimport * as THREE from 'three'\nimport { useMemo } from \"react\";\n\nconst Background = props => {\n    const texture =  useLoader(\n      THREE.TextureLoader, \n      process.env.PUBLIC_URL + '/studio.jpg'\n      )\n  \n      const { gl } = useThree()\n\n      const formatted = useMemo(()=>\n                 new THREE.WebGLCubeRenderTarget(\n                texture.image.height\n                ).fromEquirectangularTexture(gl, texture)\n      ,[])\n\n  \n    return(\n      <primitive \n      attach = 'background' \n      object={formatted} />\n    )\n  }\n\nexport default Background","import { useBox } from \"use-cannon\"\n\nconst Floor = props => {\n    const [ref, api] = useBox(()=>({args:[20,1,10],...props}))\n    return (\n      <mesh \n        ref={ ref }\n        {...props} receiveShadow>\n        <boxBufferGeometry args={[200,1,100]} />\n        <meshPhysicalMaterial transparent opacity={0.2}/>\n      </mesh>\n    )\n  }\nexport default Floor","import * as THREE from 'three'\n\n// model3 = \"Capot001_CAR_PAINT_0\"\n//  model s = \"object005_bod_0\"\n\nconst state = {\n    activeMesh : {},\n    activeMeshName : \"Capot001_CAR_PAINT_0\",\n    cameraPos : new THREE.Vector3(9,2,4),\n    target : new THREE.Vector3(4,0,0),\n    shouldUpdate: true,\n    name : \"\"\n}\n\nexport default state","import { DragControls } from 'three/examples/jsm/controls/DragControls'\nimport { extend, useThree } from 'react-three-fiber'\nimport { useRef, useEffect, useState } from 'react'\nimport Card from './Card'\n\nextend({ DragControls })\n\nconst Dragable = (props) => {\n  const groupRef = useRef()\n  const controlsRef = useRef()\n  const { camera, gl, scene } = useThree()\n  const [children, setChildren] = useState([])\n\n  useEffect(() => {\n    setChildren(groupRef.current.children)\n  }, [])\n\n  useEffect(() => {\n    controlsRef.current.addEventListener('hoveron',\n    e => scene.orbitControls.enabled = false\n    )\n    controlsRef.current.addEventListener('hoveroff',\n    e => scene.orbitControls.enabled = true\n    )\n    controlsRef.current.addEventListener('dragstart',\n    e => {\n        e.object.api?.mass.set(0)\n        console.log(e.object.uuid)\n        }\n    )\n    controlsRef.current.addEventListener('dragend',\n    e => e.object.api?.mass.set(1)\n    )\n    controlsRef.current.addEventListener('drag',\n    e => {\n        e.object.api?.position.copy(e.object.position)\n        e.object.api?.velocity.set(0,0,0)\n    }\n    )\n  }, [children])\n  return (\n    <group ref={groupRef}>\n      <dragControls \n      transformGroup = {props.transformGroup}\n      ref={controlsRef}\n      args={[children,camera, gl.domElement]} />\n      {props.children}\n    </group>\n  )\n}\n\nexport default Dragable\n","import { useFrame, useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport * as THREE from 'three'\n\nconst Model = props =>{\n    const model = useLoader(\n        GLTFLoader,\n        process.env.PUBLIC_URL + props.path\n    )\n\n    // console.log(props.path, model)\n    \n    let mixer\n    if( model.animations.length >0){\n        mixer = new THREE.AnimationMixer(model.scene)\n        model.animations.forEach(clip=>{\n            const action = mixer.clipAction(clip)\n            action.play()\n        })\n    }\n\n    useFrame((scene, delta)=>{\n        mixer?.update(delta)\n    })\n\n    model.scene.traverse(child =>{\n        if(child.isMesh){\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n    return(\n        <primitive \n        object={model.scene} \n        scale={props.scale}/>\n    )\n}\n\nexport default Model","import { initializeApp } from \"firebase/app\"\nimport { getDatabase} from \"firebase/database\";\n  \nconst firebaseConfig = {\n    apiKey: \"AIzaSyBF6zDgkQN2ess35jm4zjsV-1ztpkCQL6U\",\n    authDomain: \"esp32-7ca01.firebaseapp.com\",\n    databaseURL: \"https://esp32-7ca01-default-rtdb.firebaseio.com\",\n    projectId: \"esp32-7ca01\",\n    storageBucket: \"esp32-7ca01.appspot.com\",\n    messagingSenderId: \"972170425595\",\n    appId: \"1:972170425595:web:69df31d922860e0f386c5e\",\n    measurementId: \"G-ZBRE0QC68D\"\n  };\n    \n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// var db = firebase.database();\nlet db = getDatabase(app);\nexport default db;","import { useState, useEffect  } from \"react\"\nimport {  ref, onValue} from \"firebase/database\";\nimport db from '../db'\n\nconst divStyle = {\n    zIndex: 1,\n    position: 'absolute', \n    width: '200px' ,\n    // height: '100px', \n    background: '#FFFFFF', \n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25),inset 0px 4px 4px rgba(0, 0, 0, 0.25)\"\n}\n\nconst CameraButtons = ({}) =>{\n \n    const [falling, setFalling] = useState();\n    const [accX, setAccX] = useState();\n    const [accY, setAccY] = useState();\n    const [accZ, setAccZ] = useState();\n    const [heartrate, setHeartRate] = useState();\n    const [mqsensor, setMQSensor] = useState();\n    const [rotateX, setRotateX] = useState();\n    const [rotateY, setRotateY] = useState();\n    const [rotateZ, setRotateZ] = useState();\n    const [handC, setHandC] = useState();\n    const [handF, setHandF] = useState();\n    const [headC, setHeadC] = useState();\n    const [headF, setHeadF] = useState();\n\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        const accsensorRef = ref(db, 'Sensors/Acceleration/Falling');\n        const accXRef = ref(db, 'Sensors/Acceleration/X');\n        const accYRef = ref(db, 'Sensors/Acceleration/Y');\n        const accZRef = ref(db, 'Sensors/Acceleration/Z');\n        const heartrateRef = ref(db, 'Sensors/HeartRate');\n        const mqsensorRef = ref(db, 'Sensors/MQSensor/PPM');\n        const rotateXRef = ref(db, 'Sensors/Rotation/X');\n        const rotateYRef = ref(db, 'Sensors/Rotation/Y');\n        const rotateZRef = ref(db, 'Sensors/Rotation/Z');\n        const handTempCRef = ref(db, 'Sensors/Temperature/Hands/C');\n        const handTempFRef = ref(db, 'Sensors/Temperature/Hands/F');\n        const headTempCRef = ref(db, 'Sensors/Temperature/Head/C');\n        const headTempFRef = ref(db, 'Sensors/Temperature/Head/F');\n\n\n        onValue(accsensorRef, (snapshot) => {\n            setFalling(snapshot.val());\n        });\n        onValue(accXRef, (snapshot) => {\n            setAccX(snapshot.val());\n        });\n        onValue(accYRef, (snapshot) => {\n            setAccY(snapshot.val());\n        });\n        onValue(accZRef, (snapshot) => {\n            setAccZ(snapshot.val());\n        });\n        onValue(heartrateRef, (snapshot) => {\n            setHeartRate(snapshot.val());\n        });\n        onValue(mqsensorRef, (snapshot) => {\n            setMQSensor(snapshot.val());\n        });\n        onValue(rotateXRef, (snapshot) => {\n            setRotateX(snapshot.val());\n        });\n        onValue(rotateYRef, (snapshot) => {\n            setRotateY(snapshot.val());\n        });\n        onValue(rotateZRef, (snapshot) => {\n            setRotateZ(snapshot.val());\n        });\n        onValue(handTempCRef, (snapshot) => {\n            setHandC(snapshot.val());\n        });\n        onValue(handTempFRef, (snapshot) => {\n            setHandF(snapshot.val());\n        });\n        onValue(headTempCRef, (snapshot) => {\n            setHeadC(snapshot.val());\n        });\n        onValue(headTempFRef, (snapshot) => {\n            setHeadF(snapshot.val());\n        });\n      },[]);\n    \n    return(\n        <>\n        {/* <Card name ={name} imageUrl={imageUrl} des={des} /> */}\n        <div style={{ left:'30%',top:'10%',\n            ...divStyle\n           \n        }}>\n             <p  style={{textAlign:'center',paddingTop:'20px'}}>Head Temperature {headC} C/ {headF} F</p>\n             <p  style={{textAlign:'center',paddingTop:'20px'}}>Hands Temperature {handC} C/ {handF} F</p>\n        </div>\n        <div style={{  right:'30%',top:'10%',\n            ...divStyle\n        }}>\n        <p  style={{textAlign:'center',paddingTop:'20px'}}>Heart Rate :{heartrate == 0 ? \" Still Not Detect\" : heartrate}</p>\n        </div>\n            <div style={{ left:'30%',top:'30%',\n            ...divStyle\n        }}> \n        <p  style={{textAlign:'center'}}>Position : {falling == 0 ? <p style={{color: 'green'}}> Standing</p> : <p style={{color: 'red'}}> Falling </p>}</p>\n        <p  style={{textAlign:'center'}}>Acceleration X: {accX}, Y: {accY}, Z: {accZ} rad/s</p>\n        <p  style={{textAlign:'center'}}>Rotataion X: {rotateX}, Y: {rotateY}, Z: {rotateZ} rad/s</p>\n\n        </div>\n        <div style={{  right:'30%',top:'30%',\n            ...divStyle\n        }}>\n        <p  style={{textAlign:'center',paddingTop:'20px'}}>Gas Detector {mqsensor} PPM</p>\n        </div>\n        </>\n    )\n}\n\nexport default CameraButtons","import { useEffect, useRef } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Bulb = (props) => {\n  const ref = useRef()\n  const { scene } = useThree()\n  useEffect(()=>{\n    if(scene.lights) scene.lights.push(ref)\n    else scene.lights = [ref]\n  },[])\n\n  return (\n    <mesh \n        {...props}\n        ref = {ref}\n      >\n      <pointLight\n        castShadow\n        shadow-mapSize-height={2 ** 10}\n        shadow-mapSize-width={2 ** 10}\n        shadow-radius={10}\n      />\n      <sphereBufferGeometry args={[0.2, 20, 20]} />\n      <meshPhongMaterial emissive='white' />\n    </mesh>\n  )\n}\n\nexport default Bulb\n","import Bulb from \"./Bulb\"\n\n\nconst Lights = () => {\n    return (\n        <>\n        <ambientLight intensity={0.2}/>\n        <directionalLight \n          shadow-mapSize-height = {2**10}\n          shadow-mapSize-width = {2**10}\n          shadow-radius = {10}\n          position={[6,3,0]}\n          intensitym={2}\n          castShadow\n          />\n        <Bulb position={[0, 3, 0]}/>\n        <Bulb position={[6, 3, 0]}/>\n        <Bulb position={[-6, 3, 0]}/>\n        </>\n    )\n}\n\nexport default Lights\n","import { useEffect, useState } from \"react\"\nimport { Bloom, DepthOfField, EffectComposer, GodRays } from \"react-postprocessing\"\nimport { useThree } from \"react-three-fiber\"\n\nconst Effects = () =>{\n\n    const [lights, setLights] = useState(null)\n    const { scene } = useThree()\n    useEffect(()=>{\n        if(scene.lights && scene.lights.length === 3)\n            setLights(scene.lights)\n    },[scene.lights])\n\n    return(\n        lights ? \n        <EffectComposer>\n        <DepthOfField \n            focusDistance ={0}\n            focalLength ={0.02}\n            bokehScale = {2}\n            height = {480}\n        />\n        {/* {lights.map(light =>\n                <GodRays \n                key={light.current.uuid} \n                sun={light.current}/>\n         )} */}\n\n      </EffectComposer>\n      : null\n    )\n}\n\n\nexport default Effects","import logo from './logo.svg'\nimport './App.css'\nimport { Canvas } from 'react-three-fiber'\nimport {  Suspense } from 'react'\nimport { Physics } from 'use-cannon'\n// import { Div } from 'react-boot'\n// import { Row, Col } from 'react-bootstrap'\n\n\nimport Orbit from './components/Orbit'\nimport Background from './components/Background'\nimport Floor from './components/Floor'\nimport ColorPicker from './components/ColorPicker'\nimport Cars from './components/Cars'\nimport CameraControls from './components/CameraControls'\nimport CameraButtons from './components/CameraButtons'\nimport state from './state'\nimport Lights from './components/Lights'\nimport Effects from './components/Effects'\nimport Card from './components/Card'\nimport Model from \"./components/Model\"\n\n\nfunction App() {\n  return (\n    <div style={{ height: '100vh', width: '100vw' }}>\n      {/* <ColorPicker/> */}\n      <CameraButtons/>\n      \n      <Canvas \n      gl ={{\n        powerPreference : \"high-performance\",\n        antialias : false,\n        stencil : false,\n        depth : false\n      }}\n      shadowMap \n      style={{ background: 'black' }} \n      camera={{ position: [0,0.5,1] }}\n      // camera={{ position: [3,3,3] }}\n      >\n         \n        <Suspense fallback={null} >\n          <Background />\n        </Suspense>\n        {/* <fog attach='fog' args={['white', 1, 10]}/> */}\n        {/* <CameraControls state={state}/> */}\n        <Lights/>\n        <Orbit />\n       \n        <axesHelper args={[5]} />\n        \n      \n        <Physics>\n          {/* <Cars/> */}\n         \n        <Suspense fallback={null} >\n          \n          <Model           \n          path='/human_body/scene.gltf' \n          scale ={new Array(3).fill(0.32)}\n          position={[0, 1, 0]} />\n        </Suspense>\n        <Floor position={[0, -0.5, 0]} />\n        </Physics>\n        <Effects/>\n      </Canvas>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}